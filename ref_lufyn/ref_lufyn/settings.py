"""
Django settings for ref_lufyn project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from configurations import Configuration
# from sentry_sdk.integrations.django import DjangoIntegration
# import sentry_sdk

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


class BaseConfiguration(Configuration):
    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = '4x(&lezg2ag0utuv#w6j3ga#v#b$&_f=#!i9@2&!-ju+-jf@pv'

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True

    ALLOWED_HOSTS = ['*']

    # AUTH_USER_MODEL = 'core.User'

    ADMINS = [
        'jesvyn14@gmail.com'
    ]

    # Application definition

    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        'core',
    ]

    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'whitenoise.middleware.WhiteNoiseMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]

    ROOT_URLCONF = 'ref_lufyn.urls'

    # rest api setting
    # REST_FRAMEWORK = {
    #     # Use Django's standard `django.contrib.auth` permissions,
    #     # or allow read-only access for unauthenticated users.
    #     'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    #     'PAGE_SIZE': 10,
    #     'DEFAULT_AUTHENTICATION_CLASSES': (
    #         'rest_framework.authentication.SessionAuthentication',
    #         'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
    #         'rest_framework_social_oauth2.authentication.SocialAuthentication',
    #     ),
    #     'DEFAULT_PERMISSION_CLASSES': [
    #         'rest_framework.permissions.AllowAny'
    #         # 'rest_framework.permissions.IsAuthenticated'
    #     ]
    # }

    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [],
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]

    WSGI_APPLICATION = 'ref_lufyn.wsgi.application'

    # Database
    # https://docs.djangoproject.com/en/3.0/ref/settings/#databases

    # Local Database
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

    # postgres database
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #         'NAME': 'launchspace',
    #         'USER': 'postgres',
    #         'PASSWORD': 'postgres',
    #         'HOST': '172.17.0.2',
    #         'PORT': '5432',
    #     }
    # }

    # Password validation
    # https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]

    # Internationalization
    # https://docs.djangoproject.com/en/3.0/topics/i18n/

    LANGUAGE_CODE = 'en-us'

    TIME_ZONE = 'UTC'

    USE_I18N = True

    USE_L10N = True

    USE_TZ = True

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/3.0/howto/static-files/

    STATIC_URL = '/static/'
    
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'static'),
    ]



    # Media files
    MEDIA_URL = '/media/'

    # Auth Service
    # AUTHENTICATION_BACKENDS = (
    #     'social_core.backends.google.GoogleOAuth2',
    #     'rest_framework_social_oauth2.backends.DjangoOAuth2',
    #     'django.contrib.auth.backends.ModelBackend',
    # )

    # SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '*************************.apps.googleusercontent.com'
    # SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '***********************'

    LOGIN_REDIRECT_URL = '/'

    # Email hosting service
    # EMAIL_HOST = 'smtp.mailgun.org'
    # EMAIL_PORT = 587
    # EMAIL_HOST_USER = 'postmaster@mailgun.**********.in'
    # EMAIL_HOST_PASSWORD = '***********************'
    # EMAIL_USE_TLS = True

    # Razor pay service
    # RAZOR_PAY_KEY_ID = 'Test_********'
    # RAZOR_PAY_KEY_SECRET = '*******'

    # OTP service MSG91
    # MSG91_API_KEY = '********'

    def __init__(self):
        super(BaseConfiguration).__init__()


class Development(BaseConfiguration):
    pass


class Production(BaseConfiguration):
    DEBUG = False

    ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'ref_lufyn_link.com']

    # sentry_sdk.init(
    #     dsn="https://<key>@<organization>.ingest.sentry.io/<project>",
    #     integrations=[DjangoIntegration()],

    #     # If you wish to associate users to errors (assuming you are using

    #     # django.contrib.auth) you may enable sending PII data.
    #     send_default_pii=True
    # )


    # DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

    #Static files handling
    # STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')

